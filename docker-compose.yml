# Define os serviços (containers) que compõem a aplicação
services:
  # Serviço do banco de dados
  db:
    image: postgres:15-alpine # Usa uma imagem oficial e leve do PostgreSQL
    restart: always # Sempre reinicia o container se ele parar
    environment:
      POSTGRES_DB: ${DB_DATABASE}
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
    volumes:
      # Mapeia um volume para persistir os dados do banco de dados
      - postgres-data:/var/lib/postgresql/data
    healthcheck:
      # Comando para verificar se o PostgreSQL está pronto para aceitar conexões
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5

  # Serviço do backend (sua aplicação Node.js)
  backend:
    build: . # Constrói a imagem a partir do Dockerfile no diretório atual
    restart: always
    ports:
      - "3000:3000" # Mapeia a porta 3000 do host para a porta 3000 do container
    env_file:
      - .env # Carrega as variáveis de ambiente do arquivo .env
    depends_on:
      db:
        # Condição para esperar até que o healthcheck do serviço 'db' passe
        condition: service_healthy

# Define os volumes para persistência de dados
volumes:
  postgres-data: